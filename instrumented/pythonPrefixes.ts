function cov_18cxb3ee2g() {
  var path = "/home/capybara/repos/hedyc/static/js/pythonPrefixes.ts";
  var hash = "0e0c15c13e6743c181554fd467a75ab4be50e2ec";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/capybara/repos/hedyc/static/js/pythonPrefixes.ts",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "1": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "2": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 148,
          column: 1
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0e0c15c13e6743c181554fd467a75ab4be50e2ec"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18cxb3ee2g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18cxb3ee2g();
/*******************************************************************************
*
* !!! THIS FILE HAS BEEN GENERATED. DO NOT EDIT !!!
*
* Make desired changes to prefixes/{normal,pygame,turtle}.py
*
* Add/edit tests for those changes in tests/test_python_prefixes.py
*
* Run build-tools/heroku/generate-prefixes-ts to regenerate.
*
*******************************************************************************/

export const turtle_prefix = (cov_18cxb3ee2g().s[0]++, `# coding=utf8

import random  # noqa F401
import time  # noqa F401
import turtle

t = turtle.Turtle()
t.shape("turtle")
t.hideturtle()
t.penup()
t.left(90)
t.pendown()
t.speed(3)
t.showturtle()
`);
export const pygame_prefix = (cov_18cxb3ee2g().s[1]++, `# coding=utf8

import pygame  # noqa F401
import buttons  # noqa F401

pygame.init()
canvas = pygame.display.set_mode((711, 300))
canvas.fill(pygame.Color(247, 250, 252, 255))

pygame_end = False
button_list = []


def create_button(name):
    if name not in button_list:
        button_list.append(name)
        buttons.add(name)
`);
export const normal_prefix = (cov_18cxb3ee2g().s[2]++, `# coding=utf8

import random  # noqa F401
import time  # noqa F401

try:
    import extensions  # noqa F401
except ModuleNotFoundError:
    # This is done because 'extensions' is not a python module but rather a Skulpt JS extension
    # These functions are defined in skulpt-stdlib-extensions.js
    # When running tests in test_python_prefixes it wil raise ModuleNotFoundError
    pass

global int_saver
global convert_numerals  # needed for recursion to work
int_saver = int


def int(s):
    if isinstance(s, str):
        numerals_dict = {'0': '0', '1': '1', '2': '2', '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8',
                         '9': '9', 'ëÅ¶': '0', 'ëÅß': '1', 'ëÅ®': '2', 'ëÅ©': '3', 'ëÅ™': '4', 'ëÅ´': '5', 'ëÅ¨': '6', 'ëÅ≠': '7',
                         'ëÅÆ': '8', 'ëÅØ': '9', '‡•¶': '0', '‡•ß': '1', '‡•®': '2', '‡•©': '3', '‡•™': '4', '‡•´': '5', '‡•¨': '6',
                         '‡•≠': '7', '‡•Æ': '8', '‡•Ø': '9', '‡´¶': '0', '‡´ß': '1', '‡´®': '2', '‡´©': '3', '‡´™': '4', '‡´´': '5',
                         '‡´¨': '6', '‡´≠': '7', '‡´Æ': '8', '‡´Ø': '9', '‡©¶': '0', '‡©ß': '1', '‡©®': '2', '‡©©': '3', '‡©™': '4',
                         '‡©´': '5', '‡©¨': '6', '‡©≠': '7', '‡©Æ': '8', '‡©Ø': '9', '‡ß¶': '0', '‡ßß': '1', '‡ß®': '2', '‡ß©': '3',
                         '‡ß™': '4', '‡ß´': '5', '‡ß¨': '6', '‡ß≠': '7', '‡ßÆ': '8', '‡ßØ': '9', '‡≥¶': '0', '‡≥ß': '1', '‡≥®': '2',
                         '‡≥©': '3', '‡≥™': '4', '‡≥´': '5', '‡≥¨': '6', '‡≥≠': '7', '‡≥Æ': '8', '‡≥Ø': '9', '‡≠¶': '0', '‡≠ß': '1',
                         '‡≠®': '2', '‡≠©': '3', '‡≠™': '4', '‡≠´': '5', '‡≠¨': '6', '‡≠≠': '7', '‡≠Æ': '8', '‡≠Ø': '9', '‡µ¶': '0',
                         '‡µß': '1', '‡µ®': '2', '‡µ©': '3', '‡µ™': '4', '‡µ´': '5', '‡µ¨': '6', '‡µ≠': '7', '‡µÆ': '8', '‡µØ': '9',
                         '‡Ø¶': '0', '‡Øß': '1', '‡Ø®': '2', '‡Ø©': '3', '‡Ø™': '4', '‡Ø´': '5', '‡Ø¨': '6', '‡Ø≠': '7', '‡ØÆ': '8',
                         '‡ØØ': '9', '‡±¶': '0', '‡±ß': '1', '‡±®': '2', '‡±©': '3', '‡±™': '4', '‡±´': '5', '‡±¨': '6', '‡±≠': '7',
                         '‡±Æ': '8', '‡±Ø': '9', '·ÅÄ': '0', '·ÅÅ': '1', '·ÅÇ': '2', '·ÅÉ': '3', '·ÅÑ': '4', '·ÅÖ': '5', '·ÅÜ': '6',
                         '·Åá': '7', '·Åà': '8', '·Åâ': '9', '‡º†': '0', '‡º°': '1', '‡º¢': '2', '‡º£': '3', '‡º§': '4', '‡º•': '5',
                         '‡º¶': '6', '‡ºß': '7', '‡º®': '8', '‡º©': '9', '·†ê': '0', '·†ë': '1', '·†í': '2', '·†ì': '3', '·†î': '4',
                         '·†ï': '5', '·†ñ': '6', '·†ó': '7', '·†ò': '8', '·†ô': '9', '·ü†': '0', '·ü°': '1', '·ü¢': '2', '·ü£': '3',
                         '·ü§': '4', '·ü•': '5', '·ü¶': '6', '·üß': '7', '·ü®': '8', '·ü©': '9', '‡πê': '0', '‡πë': '1', '‡πí': '2',
                         '‡πì': '3', '‡πî': '4', '‡πï': '5', '‡πñ': '6', '‡πó': '7', '‡πò': '8', '‡πô': '9', '‡ªê': '0', '‡ªë': '1',
                         '‡ªí': '2', '‡ªì': '3', '‡ªî': '4', '‡ªï': '5', '‡ªñ': '6', '‡ªó': '7', '‡ªò': '8', '‡ªô': '9', 'Íßê': '0',
                         'Íßë': '1', 'Íßí': '2', 'Íßì': '3', 'Íßî': '4', 'Íßï': '5', 'Íßñ': '6', 'Íßó': '7', 'Íßò': '8', 'Íßô': '9',
                         'Ÿ†': '0', 'Ÿ°': '1', 'Ÿ¢': '2', 'Ÿ£': '3', 'Ÿ§': '4', 'Ÿ•': '5', 'Ÿ¶': '6', 'Ÿß': '7', 'Ÿ®': '8',
                         'Ÿ©': '9', '€∞': '0', '€±': '1', '€≤': '2', '€≥': '3', '€¥': '4', '€µ': '5', '€∂': '6', '€∑': '7',
                         '€∏': '8', '€π': '9', '„Äá': '0', '‰∏Ä': '1', '‰∫å': '2', '‰∏â': '3', 'Âõõ': '4', '‰∫î': '5', 'ÂÖ≠': '6',
                         '‰∏É': '7', 'ÂÖ´': '8', '‰πù': '9', 'Èõ∂': '0'}
        latin_numerals = ''.join([numerals_dict.get(letter, letter) for letter in s])
        return int_saver(latin_numerals)
    return (int_saver(s))


def convert_numerals(alphabet, number):
    numerals_dict_return = {
        'Latin': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],
        'Brahmi': ['ëÅ¶', 'ëÅß', 'ëÅ®', 'ëÅ©', 'ëÅ™', 'ëÅ´', 'ëÅ¨', 'ëÅ≠', 'ëÅÆ', 'ëÅØ'],
        'Devanagari': ['‡•¶', '‡•ß', '‡•®', '‡•©', '‡•™', '‡•´', '‡•¨', '‡•≠', '‡•Æ', '‡•Ø'],
        'Gujarati': ['‡´¶', '‡´ß', '‡´®', '‡´©', '‡´™', '‡´´', '‡´¨', '‡´≠', '‡´Æ', '‡´Ø'],
        'Gurmukhi': ['‡©¶', '‡©ß', '‡©®', '‡©©', '‡©™', '‡©´', '‡©¨', '‡©≠', '‡©Æ', '‡©Ø'],
        'Bengali': ['‡ß¶', '‡ßß', '‡ß®', '‡ß©', '‡ß™', '‡ß´', '‡ß¨', '‡ß≠', '‡ßÆ', '‡ßØ'],
        'Kannada': ['‡≥¶', '‡≥ß', '‡≥®', '‡≥©', '‡≥™', '‡≥´', '‡≥¨', '‡≥≠', '‡≥Æ', '‡≥Ø'],
        'Odia': ['‡≠¶', '‡≠ß', '‡≠®', '‡≠©', '‡≠™', '‡≠´', '‡≠¨', '‡≠≠', '‡≠Æ', '‡≠Ø'],
        'Malayalam': ['‡µ¶', '‡µß', '‡µ®', '‡µ©', '‡µ™', '‡µ´', '‡µ¨', '‡µ≠', '‡µÆ', '‡µØ'],
        'Tamil': ['‡Ø¶', '‡Øß', '‡Ø®', '‡Ø©', '‡Ø™', '‡Ø´', '‡Ø¨', '‡Ø≠', '‡ØÆ', '‡ØØ'],
        'Telugu': ['‡±¶', '‡±ß', '‡±®', '‡±©', '‡±™', '‡±´', '‡±¨', '‡±≠', '‡±Æ', '‡±Ø'],
        'Burmese': ['·ÅÄ', '·ÅÅ', '·ÅÇ', '·ÅÉ', '·ÅÑ', '·ÅÖ', '·ÅÜ', '·Åá', '·Åà', '·Åâ'],
        'Tibetan': ['‡º†', '‡º°', '‡º¢', '‡º£', '‡º§', '‡º•', '‡º¶', '‡ºß', '‡º®', '‡º©'],
        'Mongolian': ['·†ê', '·†ë', '·†í', '·†ì', '·†î', '·†ï', '·†ñ', '·†ó', '·†ò', '·†ô'],
        'Khmer': ['·ü†', '·ü°', '·ü¢', '·ü£', '·ü§', '·ü•', '·ü¶', '·üß', '·ü®', '·ü©'],
        'Thai': ['‡πê', '‡πë', '‡πí', '‡πì', '‡πî', '‡πï', '‡πñ', '‡πó', '‡πò', '‡πô'],
        'Lao': ['‡ªê', '‡ªë', '‡ªí', '‡ªì', '‡ªî', '‡ªï', '‡ªñ', '‡ªó', '‡ªò', '‡ªô'],
        'Javanese': ['Íßê', 'Íßë', 'Íßí', 'Íßì', 'Íßî', 'Íßï', 'Íßñ', 'Íßó', 'Íßò', 'Íßô'],
        'Arabic': ['Ÿ†', 'Ÿ°', 'Ÿ¢', 'Ÿ£', 'Ÿ§', 'Ÿ•', 'Ÿ¶', 'Ÿß', 'Ÿ®', 'Ÿ©'],
        'Persian': ['€∞', '€±', '€≤', '€≥', '€¥', '€µ', '€∂', '€∑', '€∏', '€π'],
        'Urdu': ['€∞', '€±', '€≤', '€≥', '€¥', '€µ', '€∂', '€∑', '€∏', '€π']
    }

    number = str(number)
    T = str

    sign = ''
    if number[0] == '-':
        sign = '-'
        number = number[1:]

    if number.replace('.', '', 1).isnumeric():
        numerals_list = numerals_dict_return[alphabet]
        if '.' in number:
            tokens = number.split('.')
            all_numerals_converted = [numerals_list[int(digit)] for digit in tokens[0]]
            all_numerals_converted.append('.')
            all_numerals_converted.extend(numerals_list[int(digit)] for digit in tokens[1])
            if alphabet == 'Latin':
                T = float
        else:
            all_numerals_converted = [numerals_list[int(digit)] for digit in number]
            if alphabet == 'Latin':
                T = int
        number = ''.join(all_numerals_converted)
    return T(f'{sign}{number}')
`);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,